# -*- coding: utf-8 -*-
"""Wine Quality prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X_z3Fp62r9LEegAYVl8T2mJJTxP_22rT

### Wine Quality Prediction using Support Vector Machine

###Get Understanding about Dataset

white wine data has twelve variables.


1.   fixed acidity
2.   volatile acidity

1.   citic acid

1.   residual sugar

1.   chlorides
2.   free sulfur dioxide


7.   total sulfur dioxide


8.   density

1.   pH
2.   sulphates

1.   alcohol
2.   quality

###Import Library
"""

import pandas as pd

import numpy as np

"""###Import CSV as DataFrame

"""

df=pd.read_csv("https://github.com/YBIFoundation/Dataset/raw/main/WhiteWineQuality.csv",sep=';')

df.head()

df.info()

df.describe()

df.columns

df.shape

df['quality'].value_counts()

df.groupby('quality').mean()

"""###Define Y (dependent or label or target variable) and X(independent or features or attribute variable)"""

y=df['quality']

y.shape

y

x=df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',
       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',
       'pH', 'sulphates', 'alcohol']]

x=df.drop(['quality'],axis=1)

x.shape

x

"""###Get X variable Standardized"""

from sklearn.preprocessing import StandardScaler

ss=StandardScaler()

X=ss.fit_transform(x)

X

"""###Get Train Test Split"""

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,stratify=y,random_state=2529)

X_train.shape,X_test.shape,y_train.shape,y_test.shape

"""###Get Model train"""

from sklearn.svm import SVC

svc=SVC()

svc.fit(X_train,y_train)

"""###Get Model Prediction"""

y_pred=svc.predict(X_test)

y_pred.shape

y_pred

"""###Get Model Evolution"""

from sklearn.metrics import confusion_matrix,classification_report

print(confusion_matrix(y_test,y_pred))

print(classification_report(y_test,y_pred))

"""###Get Model re-run with Two class created for wine quality

*   wine Quality 3,4,5 labelled as 0
*   wine Quality 6,7,8,9 labelled as 1
"""

y=df['quality'].apply(lambda y_value:1 if y_value>=6 else 0)

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,stratify=y,random_state=2529)

X_train.shape,X_test.shape,y_train.shape,y_test.shape

"""###Get Model Train"""

from sklearn.svm import SVC

svc=SVC()

svc.fit(X_train,y_train)

"""###Get Model prediction"""

y_pred=svc.predict(X_test)

y_pred.shape

y_pred

"""###Get Model Evaluation"""

from sklearn.metrics import confusion_matrix,classification_report

print(confusion_matrix(y_test,y_pred))

print(classification_report(y_test,y_pred))

"""###Get Future Predictions
Steps to follow


1.   Extra a random row using sample function

1.   Separate X and Y
2.   Standardize X
4.   Predict


"""

df_new=df.sample(1)

df_new

df_new.shape

X_new=df_new.drop(['quality'],axis=1)

X_new=ss.fit_transform(X_new)

y_pred_new=svc.predict(X_new)

y_pred_new

